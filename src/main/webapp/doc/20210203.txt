20210203

server side 검증

1. spring validator
	구현 방법:
	2. JSR-202(규약은 계속 추가/수정됨)
	어노테이션을 잉요
	1번 : 구체적으로 작성 가능 , 복잡한 로직 검증 가능
	2번 : 간단한 형태로만 검증 가능
	
2. JSR-202(규약은 계속 추가/수정됨)	
	어노테이션을 이용 ==> command 객체에 적용
	@NotNull
	@Min, @Max
	@Size(min, max)
	@pattern(정규식)
	==>
	
	

resourceBundle 스프링빈 등록
>> container
	parent >> Model  (model에서 처리하면 자식에서도 사용됨. 현재 root-context.xml 이 부모)
	child >> controller (주로 controller에 등록을 하지만 대다수 model에서 처리.)
	
	
순서
1.resourceBundle 파일 준비 (error.properties~~)
2.messageSource 스프링 빈 등록 (org.springframework.context.support.ReloadableResourceBundleMessageSource)
3.validator, controller에 validate 메소드 싫애
4.jsp <form:errors path="커맨드 객체 필드" />
	
	
SPRING MESSAGE : <spring:message code="LANG" />
SPRING MESSAGE : <spring:message code="GREETING" arguments="Brown!!!" />
	
	
	
*** viewResolver 설명
InternalResourceViewResolver


UserVo useVO ==> json
{
필드명 : 필드값 ,
필드명 : 필드값 ,
}

List<UserVo> ==>json
[
{
필드명 : 필드값 ,
필드명 : 필드값 ,
},
{
필드명 : 필드값 ,
필드명 : 필드값 ,
}
]

Map<String,String> ==> json
{
키명 : 키값 ,
키명 : 키값
}

...

view Resolver : controller가 반환하는 View name을 이용하여
 해당 요청을 생성할 view 객체를 선택
 
 복수의 view resolver 등록이 가능
 view resolver의 우선순위를 설정하여 적용될 순서를 결정할수 있다.



기존 internalresourceView Resolver
추가 : BeanNameViewresolver
==> 컨트롤러가 반환하는 view name 과 동일한 이름의 스프링 빈이 있으면 해당 스프링 빈을 view객체로 사용


***** internalResourceViewRecolver 사용시 주의점
==> prefix, surrfix 조합에 의해 생성된 문자열에 해당하는 리소스(jsp)가 없어도
검증을 하지 않고 응답으로 내보낸다
즉 파일이 존재하지 않을 경우 404 에러 발생

==> 우선 순위를 가장 최 하위로 둔다

parent
child

child 부분에 둔다.




///

UPDATE users SET filename='test.jpg', realfilename='d:\\upload\test.jpg'
WHERE userid = 'sally';
commit;

///

localhost/file/fileDownloadview?userid=sally


엑셀 만드는 법
1.jsp xls 만 가능 >> 실제론 html xlsx 불가
1-1/ xlsx 를 사용하려면 poi를 사용해야함
2. java api 가능


ExeclDownloadView
1. ajax
2. excel down (필수) 
3. tomcat 9 ver.
4. 사내 시스템 구현


//
SELECT column_name,b.comments
FROM USER_TAB_COMMENTS a, USER_COL_COMMENTS b
WHERE a.TABLE_NAME = b.TABLE_NAME
AND a.COLUMN_NAME = b.COLUMN_NAME
AND a.TABLE_NAME = 'USERS'
ORDER BY
